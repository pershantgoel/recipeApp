{"version":3,"sources":["components/Form.js","components/Recipes.js","App.js","components/Recipe.js","components/Router.js","serviceWorker.js","index.js"],"names":["Form","props","react_default","a","createElement","onSubmit","getRecipe","style","marginBottom","className","type","name","Recipes","recipes","map","recipe","key","recipe_id","src","image_url","alt","title","length","concat","substring","publisher","react_router_dom","to","pathname","state","API_KEY","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","recipeName","api_call","data","wrap","_context","prev","next","preventDefault","target","elements","value","fetch","sent","json","setState","console","log","stop","_x","apply","arguments","componentDidMount","_callee2","_context2","localStorage","getItem","JSON","parse","stringify","setItem","components_Form","components_Recipes","Component","Recipe","req","res","location","activeRecipe","href","publisher_url","Router","react_router","path","component","exact","Boolean","window","hostname","match","ReactDOM","render","components_Router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d3fdec19.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Form(props) {\r\n    return (\r\n        <form onSubmit={props.getRecipe} style={{ marginBottom: \"2rem\"}}>\r\n            <input className=\"form__input\" type=\"text\" name=\"recipeName\"></input>\r\n            <button className=\"form__button\">Search</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Recipes(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n            { props.recipes.map((recipe)=>{\r\n          return(\r\n            <div className=\"col-md-4\" key={recipe.recipe_id} style={{ marginBottom: \"2rem\"}}>\r\n                <div className=\"recipes__box\">\r\n                    <img src={recipe.image_url} className=\"recipe__box-img\" alt={recipe.title}></img>\r\n                    <div className=\"recipe__text\">\r\n                        <h5 className=\"recipes__title\">\r\n                        {recipe.title.length < 20 ? `${recipe.title}` : `${recipe.title.substring(0,25)}...` }\r\n                        </h5>\r\n                        <p className=\"recipes__subtitle\">Publisher: <span>{recipe.publisher}</span></p>\r\n                    </div>\r\n                    <button className=\"recipe_buttons\">\r\n                        <Link to={{ pathname : `/recipe/${recipe.recipe_id}` , state:{recipe:recipe.title} }}>View Recipe</Link>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            );\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipes\r\n","import React, { Component }  from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport Recipes from './components/Recipes';\n\nconst API_KEY = \"29b32aa0a2e2de1a18a2fcdeeecc8530\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       recipes : []\n    }\n  }\n  \n  getRecipe= async(e)=>{\n    e.preventDefault();\n    const recipeName = e.target.elements.recipeName.value;\n    const api_call = await fetch(`https://www.food2fork.com/api/search?key=${API_KEY}&q=${recipeName}`);\n    const data = await api_call.json();\n    \n    this.setState({recipes : data.recipes});\n    console.log(\"data\",this.state.recipes);\n  }\n\n  componentDidMount= async()=> {\n    if(localStorage.getItem(\"recipes\")){\n      const json = localStorage.getItem(\"recipes\");\n      const recipes = JSON.parse(json);\n      this.setState({recipes: recipes});\n    }else{\n      const api_call = await fetch(`https://www.food2fork.com/api/search?key=${API_KEY}`);\n      const data = await api_call.json();\n      \n      this.setState({recipes : data.recipes});\n    }\n    \n  }\n  \n\n  componentDidUpdate(){\n    const recipes = JSON.stringify(this.state.recipes);\n    localStorage.setItem(\"recipes\", recipes);\n  }\n\n  render(){\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"App-title\">Recipe-Search</h1>\n      </header>\n      <Form getRecipe={this.getRecipe}/>\n      <Recipes recipes={this.state.recipes}/>\n\n    </div>\n  )};\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst API_KEY = \"29b32aa0a2e2de1a18a2fcdeeecc8530\";\r\n\r\n class Recipe extends Component {\r\n     constructor(props) {\r\n         super(props)\r\n     \r\n         this.state = {\r\n              activeRecipe: []\r\n         }\r\n     }\r\n\r\n     componentDidMount = async()=>{\r\n        const title = this.props.location.state.recipe;\r\n        const req = await fetch(`https://www.food2fork.com/api/search?key=${API_KEY}&q=${title}`);\r\n        const res = await req.json();\r\n        this.setState({activeRecipe : res.recipes[0]})\r\n     }\r\n     \r\n    render() {\r\n        const recipe = this.state.activeRecipe;\r\n        return (\r\n            <div className=\"container\">\r\n                {\r\n                    this.state.activeRecipe.length!==0 && \r\n                    <div className=\"active-recipe\">\r\n                    <img className=\"active-recipe__img\" src={recipe.image_url} alt={recipe.title}/>\r\n                    <h3 className=\"active-recipe__title\">{recipe.title}</h3>\r\n                    <h4 className=\"active-recipe__publisher\">Publisher: <span>{recipe.publisher}</span></h4>\r\n                    <p className=\"active-recipe__website\">Website:\r\n                     <span><a href={recipe.publisher_url} target=\"_blank\">{recipe.publisher_url}</a></span></p>\r\n                     <button className=\"active-recipe__button\">\r\n                     <Link to=\"/\">Go Home</Link>\r\n                     </button>\r\n                </div>\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Recipe\r\n","import React from 'react';\r\nimport { HashRouter , Switch , Route } from \"react-router-dom\";\r\nimport App from \"../App\";\r\nimport Recipe from './Recipe';\r\n\r\nfunction Router() {\r\n    return (\r\n        <HashRouter>\r\n            <Switch>\r\n                <Route path=\"/\" component={App} exact />\r\n                <Route path=\"/recipe/:recipeId\" component={Recipe} />\r\n            </Switch>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default Router\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport Router from './components/Router';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}